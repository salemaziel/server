##
# Sixarm.com ➤ Secure Shell daemon (SSHd) ➤ sshd_config file
#
# https://raw.githubusercontent.com/SixArm/sshd-config/main/sshd_config
# https://github.com/SixArm/sshd-config
#
# ## Installation ##
#
# The SSHd configuration file `sshd_config` is typically either 
# for the system (i.e. all users) or your own account (i.e. one user).
#
# For the system:
#
#     mkdir -p /etc/ssh
#     cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup
#     cp sshd_config /etc/ssh/sshd_config
#
# For the user:
#
#     mkdir -p ~/.ssh
#     cp ~/.ssh/sshd_config ~/.ssh/sshd_config.backup
#     cp sshd_config ~/.ssh/sshd_config
#
# ## Help ##
#
# Links to the man pages:
#
#   * http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man5/ssh_config.5
#   * http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man5/sshd_config.5
#
# ## Organization ##
#
# SSH historically expected all its configuration information in one file.
#
# Organize config files by user directories.
#
# For the system:
#
#     mkdir -p /etc/ssh/ssh_config.d
#     mkdir -p /etc/ssh/sshd_config.d
#
# For the user:
#
#     mkdir -p ~/.ssh/ssh_config.d
#     mkdir -p ~/.ssh/sshd_config.d
#
# Thanks:
#
#  * http://www.noah.org/wiki/SSH_config
#
# ## Tracking ##
#
# Content: sshd_config
# Version: 3.0.0
# Created: 2015-06-30
# Updated: 2022-06-27
# License: GPL-2.0-or-later, or for a custom license contact us
# Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
##

# AcceptEnv
#
# Specifies what environment variables sent by the client will be
# copied into the session's environ(7). See SendEnv in ssh_config(5)
# for how to configure the client.
#
# Note that environment passing is only supported for protocol 2, and
# that the TERM environment variable is always sent whenever the
# client requests a pseudo-terminal as it is required by the protocol.
#
# Variables are specified by name, which may contain the wildcard
# characters ‘*’ and ‘?’. Multiple environment variables may be
# separated by whitespace or spread across multiple AcceptEnv
# directives.
#
# Be warned that some environment variables could be used to bypass
# restricted user environments. For this reason, care should be taken
# in the use of this directive.
#
# The default is not to accept any environment variables.
#
# Comment:
#
# We want locale environment variables, such as language settings.
#
AcceptEnv LANG LC_*
    
# ClientAliveInterval
#
# Sets a timeout interval in seconds after which if no data has been
# received from the client, sshd will send a message through the
# encrypted channel to request a response from the client.
#
# The default is 0, indicating  messages will not be sent to the client.
#
# This option applies to protocol version 2 only.
#
# Comment:
#
# Using an OpenSSH server's ClientAliveInterval, it is possible for
# the ssh server to send periodic "keep alive" messages to the ssh
# client, keeping the connection open indefinitely. This is useful
# when a firewall or other packet filtering device drops idle
# connections after a certain period of time. Note that this is
# different from the KeepAlive directive in ssh_config.
#
# Client Alive messages are sent over the encrypted link, so they
# cannot be blocked or spoofed by a firewall. These settings tell
# the server to check the client every 30 seconds. If the client
# does not respond 120 times in a row then the session is closed.
# This allows for up to 60 minutes of network interruption.
#
ClientAliveInterval 30
ClientAliveCountMax 120

# TCPKeepAlive
#
# Specifies whether the system should send TCP keepalive messages to the
# other side. If they are sent, death of the connection or crash of one of
# the machines will be properly noticed. However, this means that
# connections will die if the route is down temporarily, and some people
# find it annoying.
#
# The default is "yes" (to send TCP keepalive messages), and the client
# will notice if the network goes down or the remote host dies. This is
# important in scripts, and many users want it too.
#
# To disable TCP keepalive messages, the value should be set to "no".
#
# Comment:
#
# TCPKeepAlive is dumb. It forces sessions to terminate after a time out.
# ClientAlive settings are probably closer to what most people want.
#
# http://www.noah.org/wiki/SSH_config
#
TCPKeepAlive no

# UseDNS
#
# Specifies whether sshd(8) should look up the remote host name and
# check that the resolved host name for the remote IP address maps
# back to the very same IP address.  The default is "yes".
#
# Comment:
#
# This option is mostly useless. Setting it off speeds up logins.
#
# If the client machines are out there on the Internet, there is a high
# chance that they don't have any reverse DNS, their reverse DNS doesn't
# resolve forward, or their DNS doesn't provide any information other than
# "belongs to this ISP" which the IP address already tells you.
#
# In typical configurations, DNS is only used for logging. It can be used
# for authentication, but only if IgnoreRhosts no is specified in
# sshd_config. This is for compatibility with old installations that used
# rsh, where you can say “the user called bob on the machine called
# darkstar may log in as alice without showing any credentials” (by writing
# darkstar bob in ~alice/.rhosts). It is only secure if you trust all the
# machines that may possibly be connecting to the ssh server. In other
# words, this is very very rarely usable in a secure way.
#
# Given that the DNS lookup doesn't provide any useful information except
# in very peculiar circumstances, it should be turned off. As far as I can
# tell, the only reason it's on by default is that it's technically more
# secure (if you're concerned about authentication, not availability), even
# though that only applies to a tiny set of circumstances.
#
# http://unix.stackexchange.com/questions/56941/what-is-the-point-of-sshd-usedns-option
#
UseDNS no

# Do not set MaxAuthTries to '''1''' because SSH first tries
# public key authentication which counts against the number
# of failed tries, so if the key fails then sshd will disconnect
# and never attempt to ask for a password.
#
MaxAuthTries 2

# Bot scripts often check specific accounts for weak passwords,
# so we deny these usernames (and we never use them for SSH).
# This is purely for security convenience.
#
DenyUsers root test admin guest nobody www www-data

# For extra security, allow access only to specific users.
# Replace "user1 user2 user3" with a list of users to allow.
#AllowUsers user1 user2 user3

# PermitTunnel
#
# Specifies whether tun(4) device forwarding is allowed. The argument
# must be “yes”, “point-to-point” (layer 3), “ethernet” (layer 2), or
# “no”. Specifying “yes” permits both “point-to-point” and “ethernet”.
#
# The default is “no”. Independent of this setting, the permissions of
# the selected tun(4) device must allow access to the user.
#
# Comment:
#
# We enable the tunnel because it's needed for VPN.
#
PermitTunnel yes

##
# The rest of this file is the /etc/ssh/sshd_config 
# original file provided by macOS Monterey 12.4.
##

#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# This Include directive is not part of the default sshd_config shipped with
# OpenSSH. Options set in the included configuration files generally override
# those that follow.  The defaults only apply to options that have not been
# explicitly set.  Options that appear multiple times keep the first value set,
# unless they are a multivalue option such as HostKey.
Include /etc/ssh/sshd_config.d/*

#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

#HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
#HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
#PermitRootLogin prohibit-password
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	.ssh/authorized_keys

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
#UsePAM no

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
#X11Forwarding no
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
#PrintMotd yes
#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# override default of no subsystems
#Subsystem	sftp	/usr/libexec/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server

# XAuthLocation added by XQuartz (https://www.xquartz.org)
XAuthLocation /opt/X11/bin/xauth

