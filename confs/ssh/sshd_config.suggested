#### Using this file as your sshd_config (/etc/ssh/sshd_config) assumes you have created an
#### sshkey and copied it to your *users* (not roots) $HOME/.ssh/authorized_keys file
#### If you restart the service without doing this, you will be locked out.
#### Before restarting the service, test with: sshd -t
#### Extended test with: sshd -T

## Even if its perfect, you should use this instead, make it a habit:
## sudo kill -SIGHUP $(pgrep -f "sshd -D")

## sshd rereads its configuration file when it receives a hangup 
## signal, SIGHUP, by executing itself with the name and options 
## it was started with, e.g. /usr/sbin/sshd.

## The pgrep -f "sshd -D" part will return only the PID of the 
## sshd daemon process that listens for new connections


Port 22
PermitRootLogin no
PermitEmptyPasswords no
PasswordAuthentication no
ChallengeResponseAuthentication no

# Set this to yes to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to no.
UsePAM no

AuthenticationMethods publickey
PubkeyAuthentication yes

## Expect .ssh/authorized_keys2 to be disregarded by default in future.
AuthorizedKeysFile	.ssh/authorized_keys .ssh/authorized_keys2

ClientAliveInterval 300
ClientAliveCountMax 2

X11Forwarding no
AllowAgentForwarding no
AllowTcpForwarding no

MaxAuthTries 5
MaxSessions 2
TCPKeepAlive no
Compression no

## Allow client to pass locale environment variables
AcceptEnv LANG LC_*

## override default of no subsystems
Subsystem	sftp	/usr/lib/openssh/sftp-server


## Add your users or groups here
## Ex. 
#AllowUsers john sarah erik
#AllowGroups group1 staff mybackups

#AllowUsers
#AllowGroups

## Logging
#SyslogFacility AUTH
LogLevel VERBOSE



## To receive emails** upon ssh logins getting root access,
## enter the following in /root/.bashrc , replacing 
## ServerName and your@email.com with your own:
## **Must have mailx package installed

# echo "ALERT - Root Shell Access (ServerName) on:" `date` `who` | mail -s "Alert: Root Access from `who | cut -d"(" -f2 | cut -d")" -f1`" your@email.com




#### UNUSED OR DEFAULTS FROM SYSTEM  ###

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

## For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
## Change to yes if you dont trust ~/.ssh/known_hosts for
## HostbasedAuthentication
#IgnoreUserKnownHosts no
## Dont read the users ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

## Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

## GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

#GatewayPorts no
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
#PrintMotd no
#PrintLastLog yes

#PermitUserEnvironment no

#ClientAliveInterval 0
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server



####   SOURCES:  #####
## https://securitytrails.com/blog/mitigating-ssh-based-attacks-top-15-best-security-practices

## https://askubuntu.com/questions/462968/take-changes-in-file-sshd-config-file-without-server-reboot

## https://stribika.github.io/2015/01/04/secure-secure-shell.html


