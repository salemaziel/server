# Folder where data should be saved
DATA_FOLDER=/root/n8n/

# The top level domain to serve from
DOMAIN_NAME=example.com

# The subdomain to serve from
SUBDOMAIN=n8n

# DOMAIN_NAME and SUBDOMAIN combined decide where n8n will be reachable from
# above example would result in: https://n8n.example.com

# The user name to use for authentication - IMPORTANT ALWAYS CHANGE!
N8N_BASIC_AUTH_USER=user

# The password to use for authentication - IMPORTANT ALWAYS CHANGE!
N8N_BASIC_AUTH_PASSWORD=password

# Optional timezone to set which gets used by Cron-Node by default
# If not set New York time will be used
GENERIC_TIMEZONE=Europe/Berlin

# The email address to use for the SSL certificate creation
SSL_EMAIL=user@example.com

# Note: If you want to use special characters in the password, use quotes. For example, N8N_BASIC_AUTH_PASSWORD="p@s$w0rd"

#in env for docker-compose Postgres

POSTGRES_USER=changeUser
POSTGRES_PASSWORD=changePassword
POSTGRES_DB=n8n

POSTGRES_NON_ROOT_USER=changeUser
POSTGRES_NON_ROOT_PASSWORD=changePassword

N8N_BASIC_AUTH_USER=changeUser
N8N_BASIC_AUTH_PASSWORD=changePassword


# MySQL
MYSQLDB_DATABASE=
MYSQLDB_HOST=
MYSQLDB_PASSWORD=
MYSQLDB_PORT=
MYSQLDB_USER=


# To avoid passing sensitive information via environment variables "_FILE" may be appended to some environment variables. It will then load the data from a file with the given name. That makes it possible to load data easily from Docker- and Kubernetes-Secrets.

#The following environment variables support file input:

#DB_POSTGRESDB_DATABASE_FILE
#DB_POSTGRESDB_HOST_FILE
#DB_POSTGRESDB_PASSWORD_FILE
#DB_POSTGRESDB_PORT_FILE
#DB_POSTGRESDB_USER_FILE
#DB_POSTGRESDB_SCHEMA_FILE
#N8N_BASIC_AUTH_PASSWORD_FILE
#N8N_BASIC_AUTH_USER_FILE
